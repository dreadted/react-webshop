{"version":3,"sources":["lib/FontAwesome.ts","components/contexts/ProductContext.ts","components/contexts/OrderContext.ts","components/hooks/useCart.ts","lib/utils.ts","lib/api.ts","components/admin/hooks/useSaveState.ts","components/common/Navigation.tsx","components/shop/CategoryBadges.tsx","components/shop/ProductCard.tsx","components/common/CartItem.tsx","components/shop/CartItems.tsx","components/common/ModalDialogue.tsx","components/shop/Cart.tsx","components/shop/ProductsPage.tsx","components/common/NotFound.tsx","components/common/SelectCompany.tsx","components/shop/TogglePayMethod.tsx","components/shop/CheckoutForm.tsx","components/shop/Checkout.tsx","components/common/OrderRows.tsx","components/shop/Confirmation.tsx","components/common/Loading.tsx","components/shop/SearchHits.tsx","components/common/Footer.tsx","components/contexts/AdminContext.ts","components/admin/SelectOrderStatus.tsx","components/admin/PaymentIcon.tsx","components/admin/Order.tsx","components/admin/ToggleStatusFilter.tsx","components/admin/OrderList.tsx","components/admin/OrderAdmin.tsx","components/App.tsx","components/hooks/useProducts.ts","components/hooks/useVideo.ts","index.tsx"],"names":["library","add","faShoppingCart","faAngleUp","faAngleLeft","faAngleRight","faPlusCircle","faMinusCircle","faSpinner","faSearch","faTimes","faTrashAlt","faCcVisa","faCcMastercard","faCcAmex","faCheck","NEWS_CATEGORY","id","name","ProductContext","createContext","categories","products","news","NUMBER_OF_ITEMS_IN_NEWS","companies","map","company","slug","slugify","lower","CartAction","emptyCart","items","Map","articles","subTotal","blink","open","modal","caption","labelConfirm","labelCancel","show","emptyOrder","companyId","created","createdBy","paymentMethod","totalPrice","status","errorMessage","OrderContext","cart","dispatch","order","setOrder","APP_INFO","packageJSON","version","homepage","root","slice","lastIndexOf","getCurrencyFormat","number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","getOrderIdFormat","String","replace","apiClient","axios","create","baseURL","responseType","headers","get","a","cache","response","data","length","localStorage","setItem","JSON","stringify","getItem","parse","save","input","put","post","del","delete","fetchBLOB","url","client","SaveState","useCart","useState","setCart","useEffect","setTimeout","size","forEach","quantity","product","push","_cart","cartString","itemsString","storedCart","itemsArray","values","productId","find","p","filter","item","initialCart","resetCart","removeItem","action","payload","newCart","currentQuantity","RESET","TOGGLE","HIDE_MODAL","ADD","newCartItems","DELETE","set","entries","price","getTotals","Navigation","clearSearch","setClearSearch","useContext","history","useHistory","inputRef","useRef","toggleRef","hideSearch","useCallback","noDelay","current","value","checked","className","category","to","key","ref","type","onChange","focus","placeholder","aria-label","e","encodeURIComponent","target","htmlFor","icon","CategoryBadges","result","productCategory","pc","categoryId","c","ProductCard","alt","src","imageUrl","description","onClick","CartItem","editable","updateParams","parseInt","inputMode","pattern","disabled","CartItems","onChangeItem","params","undefined","UPDATE","ModalDialogue","props","onConfirm","onCancel","Modal","onHide","centered","Header","closeButton","Title","Body","Button","variant","Cart","cartRef","scrollIntoView","behavior","Thumbnails","Footer","Row","Col","Collapse","in","ProductsPage","useParams","currentCategory","previousSlug","usePrevious","window","scrollTo","xs","sm","md","lg","xl","cat","NotFound","video","hasButton","backgroundImage","poster","autoPlay","loop","muted","playsInline","goBack","SelectCompany","selected","errors","Form","Group","controlId","Label","Control","as","custom","defaultValue","isInvalid","Feedback","PAY_METHODS","TogglePayMethod","setErrors","ToggleButtonGroup","method","ToggleButton","CheckoutForm","isValidEmail","isSaving","onSubmit","handleChange","noValidate","autoComplete","isValid","pulse","Checkout","setSaving","isValidForm","err","Object","keys","match","submitOrder","createdOrder","console","log","messages","error","msg","join","message","statusText","savedOrder","getOrderRows","_order","orderRow","orderId","amount","preventDefault","newOrder","Date","toISOString","orderRows","OrderRows","Confirmation","setError","counter","validateOrder","toLocaleString","Loading","NO_MOVIES","year","added","SearchHits","foundProducts","setFoundProducts","loading","setLoading","time","slugslug","Array","from","Set","indexOf","timeEnd","setProducts","process","orderStatusArray","orderStatusColors","AdminContext","statusFilter","setStatusFilter","statusMatches","setStatusMatches","changeOrderStatus","updateItem","saveOrder","Promise","deleteOrder","SelectOrderStatus","statusColor","color","backgroundColor","index","PaymentIcon","i","toLowerCase","Order","setOpen","selectedStatus","setSelectedStatus","isDirty","setDirty","isSaved","setSaved","isDeleting","setDeleting","isDeleted","setDeleted","state","DIRTY","SAVING","SAVED","DELETING","useSaveState","setSaveState","onChangeStatus","toggleOpen","includes","onDelete","toLocaleDateString","aria-controls","toString","aria-expanded","ToggleStatusFilter","changeStatusFilter","reduce","b","OrderList","orders","matches","OrderAdmin","companyOrders","setCompanyOrders","currentCompany","currentCompanyId","API","sort","x","y","setOrdersAsync","updateOrder","updatedOrders","o","concat","filteredOrders","getTotalPrice","toOrderRows","Provider","selectedCompanyId","selectedCompany","_slug","App","setCategories","unshift","setCategoriesAsync","_products","populateNewsCategory","setProductsAsync","useProducts","setVideo","blob","URL","createObjectURL","preloadVideo","useVideo","Container","fluid","path","exact","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3b8c5555.chunk.js","sourcesContent":["// icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faShoppingCart,\r\n  faAngleUp,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlusCircle,\r\n  faMinusCircle,\r\n  faSpinner,\r\n  faSearch,\r\n  faTimes,\r\n  faCheck\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faCcVisa,\r\n  faCcMastercard,\r\n  faCcAmex\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(\r\n  faShoppingCart,\r\n  faAngleUp,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlusCircle,\r\n  faMinusCircle,\r\n  faSpinner,\r\n  faSearch,\r\n  faTimes,\r\n  faTrashAlt,\r\n  faCcVisa,\r\n  faCcMastercard,\r\n  faCcAmex,\r\n  faCheck\r\n);\r\n","import { createContext } from \"react\";\r\n\r\nexport const NEWS_CATEGORY: ProductCategory = { id: -1, name: \"Newly added\" };\r\nexport const NUMBER_OF_ITEMS_IN_NEWS = 4;\r\n\r\ninterface IProductContext {\r\n  categories: ProductCategory[];\r\n  products: Product[];\r\n  news: { NEWS_CATEGORY: ProductCategory; NUMBER_OF_ITEMS_IN_NEWS: number };\r\n}\r\n\r\nexport const ProductContext = createContext<IProductContext>({\r\n  categories: [],\r\n  products: [],\r\n  news: { NEWS_CATEGORY, NUMBER_OF_ITEMS_IN_NEWS }\r\n});\r\n","import { createContext } from \"react\";\r\nimport { CartDispatch } from \"../hooks/useCart\";\r\nimport slugify from \"slugify\";\r\n\r\nexport const companies: Company[] = [\r\n  { id: 0, name: \"\" },\r\n  { id: 9001, name: \"Telia\" },\r\n  { id: 9002, name: \"Volvo\" },\r\n  { id: 9003, name: \"Skanska\" },\r\n  { id: 9004, name: \"ABB\" }\r\n];\r\n\r\ncompanies.map(\r\n  company => (company.slug = slugify(company.name, { lower: true }))\r\n);\r\n\r\nexport const emptyCart: Cart = {\r\n  items: new Map<Product, number>(),\r\n  articles: 0,\r\n  subTotal: 0,\r\n  blink: false,\r\n  open: false,\r\n  modal: {\r\n    caption: \"Delete item?\",\r\n    labelConfirm: \"Delete\",\r\n    labelCancel: \"Cancel\",\r\n    show: false\r\n  }\r\n};\r\n\r\nexport const emptyOrder: Order = {\r\n  companyId: 0,\r\n  created: \"\",\r\n  createdBy: \"\",\r\n  paymentMethod: \"\",\r\n  totalPrice: 0,\r\n  status: 0\r\n};\r\n\r\nexport const MIN_QTY = 1;\r\nexport const MAX_QTY = 99;\r\n\r\nexport const errorMessage = {\r\n  createdBy: \"Please provide an accurate e-mail address!\",\r\n  companyId: \"Please select company!\",\r\n  paymentMethod: \"Please select payment method!\"\r\n};\r\n\r\ninterface IOrderContext {\r\n  companies: Company[];\r\n  cart: Cart;\r\n  dispatch: CartDispatch;\r\n  order: Order;\r\n  setOrder: React.Dispatch<React.SetStateAction<Order>>;\r\n}\r\n\r\nexport const OrderContext = createContext<IOrderContext>({\r\n  companies,\r\n  cart: emptyCart,\r\n  dispatch: () => {},\r\n  order: emptyOrder,\r\n  setOrder: () => {}\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport { emptyCart, MIN_QTY, MAX_QTY } from \"../contexts/OrderContext\";\r\n\r\nimport { APP_INFO } from \"../../lib/utils\";\r\n\r\nexport enum CartAction {\r\n  ADD,\r\n  UPDATE,\r\n  DELETE,\r\n  RESET,\r\n  TOGGLE,\r\n  HIDE_MODAL\r\n}\r\nexport type CartDispatch = (\r\n  action: CartAction,\r\n  payload?:\r\n    | {\r\n        product: Product;\r\n        quantity: number;\r\n      }\r\n    | undefined\r\n) => void;\r\n\r\ntype UseCart = (products: Product[]) => [Cart, CartDispatch];\r\n\r\nexport const useCart: UseCart = (products: Product[]) => {\r\n  const [cart, setCart] = useState<Cart>(emptyCart);\r\n\r\n  useEffect(() => {\r\n    if (cart.blink) {\r\n      setTimeout(() => setCart({ ...cart, blink: false }), 500);\r\n    }\r\n    if (cart.items.size) {\r\n      localStorage.setItem(`${APP_INFO.name}.cart`, JSON.stringify(cart));\r\n      const items: number[][] = [];\r\n      cart.items.forEach(\r\n        (quantity, product) => !!product && items.push([product.id, quantity])\r\n      );\r\n      localStorage.setItem(`${APP_INFO.name}.items`, JSON.stringify(items));\r\n    }\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    const initialCart: () => Cart = () => {\r\n      let _cart: Cart = emptyCart;\r\n\r\n      const cartString = localStorage.getItem(`${APP_INFO.name}.cart`);\r\n      const itemsString = localStorage.getItem(`${APP_INFO.name}.items`);\r\n      if (\r\n        cartString &&\r\n        cartString.length &&\r\n        itemsString &&\r\n        itemsString.length\r\n      ) {\r\n        const storedCart: Cart = { ..._cart, ...JSON.parse(cartString) };\r\n        const itemsArray: [Product, number][] = JSON.parse(itemsString).map(\r\n          (values: number[]) => {\r\n            const [productId, quantity] = values;\r\n            const product = products.find(p => p.id === productId);\r\n            if (product) return [product, quantity];\r\n            // eslint-disable-next-line array-callback-return\r\n            else return;\r\n          }\r\n        );\r\n        storedCart.items = new Map<Product, number>(\r\n          itemsArray.filter(item => !!item)\r\n        );\r\n        if (storedCart.items.size) _cart = storedCart;\r\n      }\r\n      return _cart;\r\n    };\r\n    if (products && products.length) setCart(initialCart());\r\n  }, [products]);\r\n\r\n  const getTotals = (items: Map<Product, number>) => {\r\n    let subTotal = 0;\r\n    let articles = 0;\r\n    for (let [product, quantity] of items.entries()) {\r\n      const price = product.price * quantity;\r\n      subTotal += price;\r\n      articles += quantity;\r\n    }\r\n    return [subTotal, articles];\r\n  };\r\n\r\n  const resetCart = () => {\r\n    setCart(emptyCart);\r\n    localStorage.removeItem(`${APP_INFO.name}.cart`);\r\n    localStorage.removeItem(`${APP_INFO.name}.items`);\r\n  };\r\n\r\n  const reducer = (\r\n    action: CartAction,\r\n    payload?: { product: Product; quantity: number }\r\n  ) => {\r\n    const newCart = { ...cart };\r\n    const product = payload?.product;\r\n    let quantity = payload?.quantity ? payload?.quantity : 0;\r\n    const currentQuantity = product ? newCart.items.get(product) : 0;\r\n\r\n    switch (action) {\r\n      case CartAction.RESET:\r\n        resetCart();\r\n        break;\r\n      case CartAction.TOGGLE:\r\n        if (cart.articles) setCart({ ...cart, open: !cart.open });\r\n        break;\r\n      case CartAction.HIDE_MODAL:\r\n        newCart.modal.show = false;\r\n        setCart({ ...newCart });\r\n        break;\r\n      case CartAction.ADD:\r\n        quantity = currentQuantity ? currentQuantity + quantity : quantity;\r\n      /* falls through */\r\n      default:\r\n        [newCart.blink, newCart.open] =\r\n          action === CartAction.ADD ? [true, false] : [!cart.open, cart.open];\r\n        const newCartItems = new Map(cart.items);\r\n        if (action === CartAction.DELETE) {\r\n          newCart.modal.show = false;\r\n          if (cart.modal.item?.product)\r\n            newCartItems.delete(cart.modal.item.product);\r\n        } else if (product) {\r\n          if (quantity === 0) {\r\n            newCart.modal.item = {\r\n              product,\r\n              quantity: currentQuantity ? currentQuantity : 0\r\n            };\r\n            newCart.modal.show = true;\r\n          } else if (quantity >= MIN_QTY && quantity <= MAX_QTY) {\r\n            newCartItems.set(product, quantity);\r\n          }\r\n        }\r\n        if (!newCartItems.size) {\r\n          resetCart();\r\n        } else {\r\n          [newCart.items, newCart.subTotal, newCart.articles] = [\r\n            newCartItems,\r\n            ...getTotals(newCartItems)\r\n          ];\r\n          setCart({ ...newCart });\r\n        }\r\n    }\r\n  };\r\n\r\n  return [cart, reducer];\r\n};\r\n","import packageJSON from \"../../package.json\";\r\n\r\nexport const APP_INFO = {\r\n  name: packageJSON.name,\r\n  version: packageJSON.version,\r\n  homepage: packageJSON.homepage,\r\n  root: packageJSON.homepage.slice(packageJSON.homepage.lastIndexOf(\"/\"))\r\n};\r\n\r\nexport const getCurrencyFormat: (number: number) => string = (number: number) =>\r\n  new Intl.NumberFormat(\"se-SV\", {\r\n    style: \"currency\",\r\n    currency: \"SEK\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0\r\n  }).format(number);\r\n\r\nexport const getOrderIdFormat: (\r\n  number: number | undefined\r\n) => string = number => String(number).replace(/(.)(?=(\\d{5})+$)/g, \"$1-\");\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport { APP_INFO } from \"./utils\";\r\n\r\nconst apiClient: AxiosInstance = axios.create({\r\n  baseURL: \"https://dreadnallen-react-webshop.firebaseapp.com/api/v1\",\r\n  responseType: \"json\",\r\n  headers: { \"Content-Type\": \"application/json\" }\r\n});\r\n\r\nexport const get = async <T extends {}>(\r\n  slug: string,\r\n  cache: boolean = false\r\n) => {\r\n  try {\r\n    const response = await apiClient.get<T[]>(`/${slug}`);\r\n    const data = response.data;\r\n    if (data && data.length && cache)\r\n      localStorage.setItem(`${APP_INFO.name}.${slug}`, JSON.stringify(data));\r\n    return data;\r\n  } catch (err) {\r\n    const data = localStorage.getItem(`${APP_INFO.name}.${slug}`);\r\n    if (data && data.length) return JSON.parse(data) as T[];\r\n    if (err && err.response) return err.response.data;\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const save = async <T extends {}>(\r\n  input: T,\r\n  slug: string,\r\n  id?: number\r\n) => {\r\n  try {\r\n    if (id) {\r\n      const response = await apiClient.put<T>(`/${slug}/${id}`, input);\r\n      return { status: response.status, data: response.data };\r\n    } else {\r\n      const response = await apiClient.post<T>(`/${slug}`, input);\r\n      return { status: response.status, data: response.data };\r\n    }\r\n  } catch (err) {\r\n    if (err && err.response) return err.response;\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const del = async (slug: string, id: number) => {\r\n  try {\r\n    const response = await apiClient.delete(`/${slug}/${id}`, {\r\n      data: { id }\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    if (err && err.response) return err.response;\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const fetchBLOB = async (url: string) => {\r\n  const client: AxiosInstance = axios.create({\r\n    responseType: \"blob\",\r\n    headers: { \"Content-Type\": \"video/x-matroska\" }\r\n  });\r\n\r\n  try {\r\n    const response = await client.get(url);\r\n    return response.data;\r\n  } catch (err) {\r\n    if (err && err.response) return err.response.data;\r\n    throw err;\r\n  }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport enum SaveState {\r\n  DEFAULT,\r\n  DIRTY,\r\n  SAVING,\r\n  SAVED,\r\n  DELETING,\r\n  DELETED\r\n}\r\n\r\ntype Flags = {\r\n  isDirty: boolean;\r\n  isSaving: boolean;\r\n  isSaved: boolean;\r\n  isDeleting: boolean;\r\n  isDeleted: boolean;\r\n};\r\n\r\ntype UseSaveState = () => [Flags, (state: SaveState) => void];\r\n\r\nexport const useSaveState: UseSaveState = () => {\r\n  const [isDirty, setDirty] = useState<boolean>(false);\r\n  const [isSaving, setSaving] = useState<boolean>(false);\r\n  const [isSaved, setSaved] = useState<boolean>(false);\r\n  const [isDeleting, setDeleting] = useState<boolean>(false);\r\n  const [isDeleted, setDeleted] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isSaved) {\r\n      setTimeout(() => setSaved(false), 1000);\r\n    }\r\n  }, [isSaved]);\r\n\r\n  useEffect(() => {\r\n    if (isSaving && isSaved) setSaving(false);\r\n  }, [isSaving, isSaved]);\r\n\r\n  useEffect(() => {\r\n    if (isDeleted) {\r\n      setTimeout(() => setDeleted(false), 1000);\r\n    }\r\n  }, [isDeleted]);\r\n\r\n  useEffect(() => {\r\n    if (isDeleting && isDeleted) setDeleting(false);\r\n  }, [isDeleting, isDeleted]);\r\n\r\n  const reducer = (state: SaveState) => {\r\n    switch (state) {\r\n      case SaveState.DIRTY:\r\n        setSaved(false);\r\n        setDirty(true);\r\n        break;\r\n      case SaveState.SAVING:\r\n        setSaving(true);\r\n        break;\r\n      case SaveState.SAVED:\r\n        setDirty(false);\r\n        setSaved(true);\r\n        break;\r\n      case SaveState.DELETING:\r\n        setDeleting(true);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return [{ isDirty, isSaving, isSaved, isDeleting, isDeleted }, reducer];\r\n};\r\n","import React, {\r\n  ChangeEvent,\r\n  useRef,\r\n  useEffect,\r\n  Dispatch,\r\n  useCallback,\r\n  useContext\r\n} from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\ninterface NavigationProps {\r\n  clearSearch: boolean;\r\n  setClearSearch: Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Navigation: React.FC<NavigationProps> = ({\r\n  clearSearch,\r\n  setClearSearch\r\n}) => {\r\n  const { categories } = useContext(ProductContext);\r\n  const history = useHistory();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const toggleRef = useRef<HTMLInputElement>(null);\r\n\r\n  const hideSearch = useCallback(\r\n    (noDelay?: boolean) => {\r\n      if (!noDelay) setTimeout(() => hideSearch(true), 2000);\r\n      else\r\n        !(inputRef && inputRef.current && inputRef.current.value) &&\r\n          toggleRef &&\r\n          toggleRef.current &&\r\n          (toggleRef.current.checked = false);\r\n    },\r\n    [inputRef, toggleRef]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (clearSearch && inputRef.current) {\r\n      inputRef.current.value = \"\";\r\n      hideSearch();\r\n    }\r\n    setClearSearch(false);\r\n  }, [clearSearch, hideSearch, setClearSearch]);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const input: string = encodeURIComponent(e.target.value);\r\n    if (!input) hideSearch();\r\n    else input.length > 1 && history.push(`/search/${input}`);\r\n  };\r\n\r\n  const focusSearch = () => {\r\n    if (toggleRef.current?.checked) inputRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-secondary sticky-top px-2 py-1\">\r\n      <nav className=\"nav nav-pills nav-fill align-items-center\">\r\n        {categories.map(category => {\r\n          return (\r\n            <NavLink\r\n              className=\"nav-item nav-link h2 pt-2 pb-1 my-1\"\r\n              to={`/${category.slug}`}\r\n              key={category.id}\r\n            >\r\n              {category.name}\r\n            </NavLink>\r\n          );\r\n        })}\r\n        <div className=\"nav-item\">\r\n          <input\r\n            ref={toggleRef}\r\n            type=\"checkbox\"\r\n            id=\"search-toggle\"\r\n            onChange={focusSearch}\r\n          />\r\n          <div className=\"search mx-4 my-0 align-self-center\">\r\n            <div className=\"d-flex\">\r\n              <input\r\n                ref={inputRef}\r\n                className=\"form-control\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label\r\n            className=\"search-open btn btn-secondary m-0\"\r\n            htmlFor=\"search-toggle\"\r\n          >\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </label>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\ninterface CategoryBadges {\r\n  product: Product;\r\n}\r\n\r\nconst CategoryBadges: React.FC<CategoryBadges> = ({ product }) => {\r\n  const { categories } = useContext(ProductContext);\r\n\r\n  let result: React.ReactNodeArray = [];\r\n  const currentCategories = categories.filter(\r\n    category =>\r\n      category.id > 0 &&\r\n      product.productCategory?.find(pc => pc.categoryId === category.id)\r\n  );\r\n\r\n  currentCategories.map(c =>\r\n    result.push(\r\n      <Link\r\n        key={c.id}\r\n        className={`badge badge-pill mr-2 text-secondary product-category-${c.id}`}\r\n        to={`/${c.slug}`}\r\n      >\r\n        {c.name}\r\n      </Link>\r\n    )\r\n  );\r\n  return <>{result}</>;\r\n};\r\n\r\nexport default CategoryBadges;\r\n","import React, { useContext } from \"react\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\n// components\r\nimport CategoryBadges from \"./CategoryBadges\";\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\r\n  const { dispatch } = useContext(OrderContext);\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div className=\"card mx-1 mx-sm-3 my-3 bg-dark shadow-sm\">\r\n        <div className=\"overlay\">\r\n          <img\r\n            className=\"card-img-top img-fluid\"\r\n            alt={product.name}\r\n            src={product.imageUrl}\r\n          />\r\n          <div className=\"card-description\">\r\n            <div className=\"d-flex\">\r\n              <div>\r\n                <img\r\n                  className=\"thumbnail d-block d-sm-none\"\r\n                  alt={product.name}\r\n                  src={product.imageUrl}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-weight-bold\">{product.name}</h4>\r\n                <p>{product.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer px-3 px-md-2\">\r\n          <div className=\"d-flex mb-3\">\r\n            <CategoryBadges product={product} />\r\n          </div>\r\n          <div className=\"d-flex flex-md-wrap align-items-center justify-content-between\">\r\n            <div className=\"h5 font-weight-bold mb-0 mx-1\">\r\n              {getCurrencyFormat(product.price)}\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => dispatch(CartAction.ADD, { product, quantity: 1 })}\r\n            >\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\ninterface CartItemProps {\r\n  item: CartItem;\r\n  editable: boolean;\r\n  onChange: HandleChange;\r\n  updateParams: UpdateParams;\r\n}\r\n\r\nconst CartItem: React.FC<CartItemProps> = ({\r\n  item,\r\n  editable,\r\n  onChange,\r\n  updateParams\r\n}) => {\r\n  return (\r\n    <>\r\n      <li className=\"cart-item list-group-item d-flex align-items-stretch px-3\">\r\n        <div className=\"mr-3\">\r\n          <img\r\n            className=\"thumbnail\"\r\n            src={item.product.imageUrl}\r\n            alt={item.product.name}\r\n          />\r\n        </div>\r\n        <div className=\"flex-grow-1 d-flex flex-column justify-content-around h5 mb-0\">\r\n          <div className=\"mb-2\">{item.product.name}</div>\r\n          <div className=\"d-flex align-items-center justify-content-between\">\r\n            <div\r\n              className={editable ? \"bg-secondary text-info rounded-pill\" : \"\"}\r\n            >\r\n              <div className=\"d-flex align-items-center justify-content-start\">\r\n                {(editable && (\r\n                  <div\r\n                    className=\"update decrease p-1\"\r\n                    onClick={e =>\r\n                      onChange(e, {\r\n                        ...updateParams,\r\n                        item,\r\n                        quantity: item.quantity - 1\r\n                      })\r\n                    }\r\n                  >\r\n                    <FontAwesomeIcon icon=\"minus-circle\" />\r\n                  </div>\r\n                )) || <small className=\"text-lighter\">qty :</small>}\r\n                <div className=\"font-weight-bold\">\r\n                  <input\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                      e.target.value &&\r\n                      onChange(e, {\r\n                        ...updateParams,\r\n                        item,\r\n                        quantity: parseInt(e.target.value)\r\n                      })\r\n                    }\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[0-9]*\"\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    value={item.quantity}\r\n                    disabled={!editable}\r\n                  />\r\n                </div>\r\n                {editable && (\r\n                  <div\r\n                    className=\"update increase p-1\"\r\n                    onClick={e =>\r\n                      onChange(e, {\r\n                        ...updateParams,\r\n                        item,\r\n                        quantity: item.quantity + 1\r\n                      })\r\n                    }\r\n                  >\r\n                    <FontAwesomeIcon icon=\"plus-circle\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={editable ? \"w-25 text-right\" : \"text-right\"}>\r\n              {getCurrencyFormat(item.product.price * item.quantity)}\r\n            </div>\r\n            {editable && (\r\n              <div className=\"w-25\">\r\n                <div\r\n                  className=\"update ml-auto p-1\"\r\n                  onClick={e =>\r\n                    onChange(e, { ...updateParams, item, quantity: 0 })\r\n                  }\r\n                >\r\n                  <FontAwesomeIcon icon={[\"far\", \"trash-alt\"]} size=\"sm\" />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useContext } from \"react\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\n// components\r\nimport CartItem from \"../common/CartItem\";\r\n\r\nconst CartItems: React.FC = () => {\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n\r\n  const onChangeItem: HandleChange = (e, params) => {\r\n    const { item, quantity } = params;\r\n    if (item && quantity !== undefined)\r\n      dispatch(CartAction.UPDATE, { product: item.product, quantity });\r\n  };\r\n\r\n  const result = [];\r\n  for (let [product, quantity] of cart.items.entries()) {\r\n    result.push(\r\n      <CartItem\r\n        key={product.id}\r\n        item={{ product, quantity }}\r\n        editable={true}\r\n        onChange={onChangeItem}\r\n        updateParams={{}}\r\n      />\r\n    );\r\n  }\r\n  return <>{result}</>;\r\n};\r\n\r\nexport default CartItems;\r\n","import React from \"react\";\r\n\r\n// css\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n// components\r\nimport CartItem from \"./CartItem\";\r\n\r\ninterface ModalDialogueProps {\r\n  props: ModalProps;\r\n  onConfirm: HandleClick;\r\n  onCancel: () => void;\r\n}\r\nconst ModalDialogue: React.FC<ModalDialogueProps> = ({\r\n  props,\r\n  onConfirm,\r\n  onCancel\r\n}) => {\r\n  return (\r\n    <Modal show={props.show} onHide={onCancel} centered>\r\n      <Modal.Header closeButton className=\"border-0 pb-0\">\r\n        <Modal.Title>{props.caption}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"pt-0\">\r\n        <div className=\"cart my-3\">\r\n          <ul className=\"list-group\">\r\n            {props.item && (\r\n              <CartItem\r\n                item={props.item}\r\n                editable={false}\r\n                onChange={() => {}}\r\n                updateParams={{}}\r\n              />\r\n            )}\r\n          </ul>\r\n        </div>\r\n        <div className=\"d-flex align-items-center justify-content-end\">\r\n          <Button variant=\"outline-info\" onClick={onCancel}>\r\n            {props.labelCancel}\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={onConfirm} className=\"ml-3\">\r\n            {props.labelConfirm}\r\n          </Button>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalDialogue;\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n//components\r\nimport CartItems from \"./CartItems\";\r\nimport ModalDialogue from \"../common/ModalDialogue\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// hooks\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\nconst Cart: React.FC = () => {\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n  const cartRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToCart = () => {\r\n    if (cart.open && cartRef && cartRef.current)\r\n      cartRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToCart, [cart.open]);\r\n\r\n  const classOpen = () => {\r\n    return cart.open ? \"open\" : \"\";\r\n  };\r\n\r\n  const classBlink = () => {\r\n    return cart.blink ? \"blink\" : \"\";\r\n  };\r\n\r\n  const classCaption = () => {\r\n    return (\r\n      !cart.open &&\r\n      (cart.items.size ? \" d-none\" : \"\") +\r\n        (cart.items.size > 5 ? \" d-sm-none\" : \" d-sm-block\") +\r\n        (cart.items.size > 7 ? \" d-md-none\" : \" d-md-block\") +\r\n        (cart.items.size > 11 ? \" d-lg-none\" : \" d-lg-block\") +\r\n        (cart.items.size > 16 ? \" d-xl-none\" : \" d-xl-block\")\r\n    );\r\n  };\r\n\r\n  const Thumbnails: React.FC = () => {\r\n    const result = [];\r\n    for (let [product, quantity] of cart.items.entries()) {\r\n      result.push(\r\n        <div\r\n          key={product.id}\r\n          className=\"py-1 py-0-sm d-flex align-items-center\"\r\n        >\r\n          <div>\r\n            <img\r\n              className=\"thumbnail\"\r\n              src={product.imageUrl}\r\n              alt={product.name}\r\n            />\r\n          </div>\r\n          <div className={`label badge badge-pill`}>{quantity}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"d-flex flex-wrap\">{result}</div>;\r\n  };\r\n\r\n  const Header: React.FC = () => {\r\n    return (\r\n      <div\r\n        className={`toggle p-0 d-flex align-items-center  ${classOpen()}`}\r\n        onClick={() => dispatch(CartAction.TOGGLE)}\r\n      >\r\n        <div className=\"d-flex m-3 py-1 align-items-center flex-nowrap h5\">\r\n          <div>\r\n            <FontAwesomeIcon icon=\"shopping-cart\" />\r\n          </div>\r\n          <div className={`ml-2 font-weight-bold ${classCaption()}`}>\r\n            Shopping cart\r\n          </div>\r\n        </div>\r\n        <div className=\"ml-4\">\r\n          <Thumbnails />\r\n        </div>\r\n        <div className=\"ml-auto mr-4\">\r\n          <FontAwesomeIcon icon=\"angle-up\" size=\"lg\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Footer: React.FC = () => {\r\n    return (\r\n      <>\r\n        {cart.articles ? (\r\n          <li className=\"cart-item cart-footer list-group-item d-flex justify-content-between align-items-center flex-wrap p-0\">\r\n            <div className=\"d-flex h5 ml-auto m-3\">\r\n              <div className=\"font-weight-light mr-3\">Total:</div>\r\n              <div className=\"font-weight-bold\">\r\n                {getCurrencyFormat(cart.subTotal)}\r\n              </div>\r\n            </div>\r\n            <div className=\"m-2\">\r\n              <Link to={\"/checkout\"} className=\"btn btn-primary\">\r\n                Check Out\r\n                <FontAwesomeIcon\r\n                  icon=\"angle-right\"\r\n                  size=\"lg\"\r\n                  className=\"ml-2\"\r\n                />\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        ) : undefined}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row className={`${cart.open ? \"\" : \"fixed-bottom px-3\"}`}>\r\n      <Col className=\"px-0\">\r\n        <div className=\"cart\" id=\"cart\" ref={cartRef}>\r\n          <div className={`cart-header ${classBlink()}`}>\r\n            <Header />\r\n          </div>\r\n          <Collapse in={cart.open}>\r\n            <ul className=\"list-group list-group-flush\">\r\n              <CartItems />\r\n              <Footer />\r\n            </ul>\r\n          </Collapse>\r\n        </div>\r\n        <ModalDialogue\r\n          onConfirm={() => dispatch(CartAction.DELETE)}\r\n          onCancel={() => dispatch(CartAction.HIDE_MODAL)}\r\n          props={cart.modal}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useRef, useContext } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n//components\r\nimport ProductCard from \"./ProductCard\";\r\nimport Cart from \"./Cart\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\n\r\nconst NEWS_CATEGORY = -1;\r\n\r\nconst ProductsPage: React.FC = () => {\r\n  const { categories, products } = useContext(ProductContext);\r\n  const { cart, dispatch } = useContext(OrderContext);\r\n\r\n  const { slug } = useParams();\r\n  const currentCategory: ProductCategory | undefined = slug\r\n    ? categories.find(category => category.slug === slug)\r\n    : categories.find(category => category.id === NEWS_CATEGORY);\r\n\r\n  const usePrevious = <T extends {} | undefined>(value: T) => {\r\n    const ref = useRef<T>();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  };\r\n  const previousSlug = usePrevious(slug);\r\n\r\n  useEffect(() => {\r\n    if (previousSlug !== slug && cart.open) dispatch(CartAction.TOGGLE);\r\n  }, [previousSlug, slug, cart.open, dispatch]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [slug]);\r\n\r\n  const getProductsFromCategory = (category: ProductCategory) => {\r\n    return products.filter(product => {\r\n      return product.productCategory.find(\r\n        cat => cat.categoryId === category.id\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!currentCategory && <Redirect to=\"/not-found\" />}\r\n      {!slug && currentCategory && <Redirect to={`/${currentCategory.slug}`} />}\r\n      <Row xs={1} sm={2} md={3} lg={4} xl={5}>\r\n        {currentCategory &&\r\n          getProductsFromCategory(currentCategory).map(product => (\r\n            <ProductCard key={product.id} product={product} />\r\n          ))}\r\n      </Row>\r\n      <Cart />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// video\r\n// import video from \"../media/404.mkv\";\r\n// import poster from \"../media/404.jpg\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\ninterface NotFoundProps {\r\n  video: Video;\r\n  hasButton: boolean;\r\n  caption: string;\r\n}\r\n\r\nconst NotFound: React.FC<NotFoundProps> = ({ video, hasButton, caption }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"video\">\r\n      <div className=\"overlay w-100\" style={{ backgroundImage: video.poster }}>\r\n        <video autoPlay loop muted playsInline poster={video.poster}>\r\n          <source src={video.url} type=\"video/mp4\" />\r\n        </video>\r\n        <div className=\"description d-flex justify-content-around\">\r\n          {hasButton && (\r\n            <div className=\"align-self-center text-nowrap\">\r\n              <button className=\"btn\" onClick={history.goBack}>\r\n                <FontAwesomeIcon icon=\"angle-left\" size=\"sm\" className=\"mr-2\" />\r\n                back\r\n              </button>\r\n            </div>\r\n          )}\r\n          <div className=\"align-self-center text-nowrap\">\r\n            <h1>{caption}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useContext } from \"react\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\ninterface SelectCompanyProps {\r\n  selected?: number;\r\n  onChange?: HandleChange;\r\n  errors?: OrderErrors;\r\n}\r\n\r\nconst SelectCompany: React.FC<SelectCompanyProps> = ({\r\n  selected = 0,\r\n  onChange,\r\n  errors\r\n}) => {\r\n  const { companies } = useContext(OrderContext);\r\n  return (\r\n    <Form.Group controlId=\"formGroupCompany\">\r\n      <Form.Label>company</Form.Label>\r\n      <Form.Control\r\n        as=\"select\"\r\n        custom\r\n        size=\"lg\"\r\n        name=\"companyId\"\r\n        defaultValue={selected}\r\n        onChange={onChange}\r\n        isInvalid={!!errors?.companyId}\r\n      >\r\n        {companies.map(company => (\r\n          <option value={company.id ? company.id : \"\"} key={company.id}>\r\n            {company.name}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors?.companyId}\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default SelectCompany;\r\n","import React from \"react\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\n// icon\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconName } from \"@fortawesome/fontawesome-svg-core\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst PAY_METHODS = [\r\n  { icon: \"cc-visa\" as IconName, name: \"Visa\" },\r\n  { icon: \"cc-mastercard\" as IconName, name: \"MasterCard\" },\r\n  { icon: \"cc-amex\" as IconName, name: \"Amex\" }\r\n];\r\n\r\ninterface TogglePayMethodProps {\r\n  order: Order;\r\n  setOrder: React.Dispatch<React.SetStateAction<Order>>;\r\n  errors: OrderErrors;\r\n  setErrors: React.Dispatch<React.SetStateAction<OrderErrors>>;\r\n}\r\n\r\nconst TogglePayMethod: React.FC<TogglePayMethodProps> = ({\r\n  order,\r\n  setOrder,\r\n  errors,\r\n  setErrors\r\n}) => {\r\n  const onChange: HandleChange = value => {\r\n    setErrors({ ...errors, paymentMethod: \"\" });\r\n    setOrder({ ...order, paymentMethod: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <Form.Label>payment method</Form.Label>\r\n      <ToggleButtonGroup\r\n        className={`d-flex flex-wrap rounded ${\r\n          errors.paymentMethod\r\n            ? \"border border-danger is-invalid\"\r\n            : \"border border-dark\"\r\n        }`}\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        value={order.paymentMethod}\r\n        onChange={onChange}\r\n      >\r\n        {PAY_METHODS.map(method => (\r\n          <ToggleButton\r\n            key={method.icon}\r\n            value={method.name}\r\n            variant={order.paymentMethod === method.name ? \"secondary\" : \"info\"}\r\n          >\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n              <FontAwesomeIcon\r\n                icon={[\"fab\", method.icon]}\r\n                size=\"2x\"\r\n                key={method.icon}\r\n                className=\"mr-2\"\r\n              />\r\n              <span className=\"d-none d-sm-inline font-weight-lighter\">\r\n                {method.name}\r\n              </span>\r\n            </div>\r\n          </ToggleButton>\r\n        ))}\r\n      </ToggleButtonGroup>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.paymentMethod}\r\n      </Form.Control.Feedback>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TogglePayMethod;\r\n","import React, { useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// contexts\r\n\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n// components\r\nimport SelectCompany from \"../common/SelectCompany\";\r\nimport TogglePayMethod from \"./TogglePayMethod\";\r\n\r\ninterface CheckoutFormProps {\r\n  errors: OrderErrors;\r\n  setErrors: React.Dispatch<React.SetStateAction<OrderErrors>>;\r\n  isValidEmail: () => boolean;\r\n  isSaving: boolean;\r\n  onSubmit: HandleSubmit;\r\n}\r\n\r\nconst CheckoutForm: React.FC<CheckoutFormProps> = ({\r\n  errors,\r\n  setErrors,\r\n  isValidEmail,\r\n  isSaving,\r\n  onSubmit\r\n}) => {\r\n  const { order, setOrder } = useContext(OrderContext);\r\n  const handleChange: HandleChange = e => {\r\n    if (e.target.name) {\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n      const value = { [e.target.name]: e.target.value };\r\n      setOrder({ ...order, ...value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} noValidate autoComplete=\"off\" className=\"mt-4\">\r\n      <SelectCompany\r\n        selected={order.companyId}\r\n        onChange={handleChange}\r\n        errors={errors}\r\n      />\r\n      <Form.Group controlId=\"formGroupEmail\">\r\n        <Form.Label>e-mail address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          name=\"createdBy\"\r\n          placeholder=\"e-mail\"\r\n          size=\"lg\"\r\n          value={order.createdBy}\r\n          onChange={handleChange}\r\n          isValid={isValidEmail()}\r\n          isInvalid={!!errors.createdBy}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.createdBy}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <TogglePayMethod\r\n        order={order}\r\n        setOrder={setOrder}\r\n        errors={errors}\r\n        setErrors={setErrors}\r\n      />\r\n      <div className=\"text-right mt-4\">\r\n        <button type=\"submit\" className=\"w-50 btn btn-primary mt-4 mt-md-0\">\r\n          {isSaving ? (\r\n            <FontAwesomeIcon icon=\"spinner\" pulse />\r\n          ) : (\r\n            <>\r\n              Place order\r\n              <FontAwesomeIcon icon=\"angle-right\" size=\"lg\" className=\"ml-2\" />\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// api\r\nimport { save } from \"../../lib/api\";\r\n\r\n// utils\r\nimport { getCurrencyFormat } from \"../../lib/utils\";\r\n\r\n// context\r\nimport { errorMessage, OrderContext } from \"../contexts/OrderContext\";\r\n\r\n// components\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport { CartAction } from \"../hooks/useCart\";\r\nimport CartItems from \"./CartItems\";\r\nimport ModalDialogue from \"../common/ModalDialogue\";\r\n\r\nconst Checkout: React.FC = () => {\r\n  const { cart, dispatch, order, setOrder } = useContext(OrderContext);\r\n  const [isSaving, setSaving] = useState<boolean>(false);\r\n  const [errors, setErrors] = useState<OrderErrors>({\r\n    companyId: \"\",\r\n    createdBy: \"\",\r\n    paymentMethod: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cart.open) dispatch(CartAction.TOGGLE);\r\n  }, [cart.open, dispatch]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!cart.subTotal) history.push(\"/\");\r\n  }, [history, cart]);\r\n\r\n  const handleSubmit: HandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!isValidForm()) return;\r\n\r\n    delete order.id; // important!\r\n    const newOrder = {\r\n      ...order,\r\n      created: new Date().toISOString(),\r\n      totalPrice: cart.subTotal,\r\n      orderRows: getOrderRows(order)\r\n    };\r\n\r\n    submitOrder(newOrder);\r\n  };\r\n\r\n  const isValidForm = () => {\r\n    const err: OrderErrors = {};\r\n    if (!isValidEmail()) err.createdBy = errorMessage.createdBy;\r\n    if (!order.companyId) err.companyId = errorMessage.companyId;\r\n    if (!order.paymentMethod) err.paymentMethod = errorMessage.paymentMethod;\r\n    setErrors(err);\r\n    return Object.keys(err).length === 0;\r\n  };\r\n\r\n  const isValidEmail = () => {\r\n    const format = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return order.createdBy.match(format) ? true : false;\r\n  };\r\n\r\n  const submitOrder = async (createdOrder: Order) => {\r\n    setSaving(true);\r\n    console.log(\"createdOrder:\", JSON.stringify(createdOrder));\r\n    const response = await save<Order>(createdOrder, \"orders\");\r\n    console.log(\"response:\", response);\r\n\r\n    if (response.status !== 201) {\r\n      setSaving(false);\r\n      if (response.data && response.data.errors) {\r\n        const messages: string[] = response.data.errors.map(\r\n          (error: any) => error.msg\r\n        );\r\n        console.error(\"ERROR!\", messages.join(\"\\n\"));\r\n        setErrors({ ...errors, response: messages.join(\"\\n\") });\r\n      } else {\r\n        const message = `${response.status} : ${response.statusText}`;\r\n        setErrors({ ...errors, response: message });\r\n      }\r\n    } else {\r\n      const savedOrder: Order = response.data;\r\n      console.log(\"savedOrder:\", JSON.stringify(savedOrder));\r\n      setOrder({ ...savedOrder });\r\n      history.push(\"/confirmation\");\r\n    }\r\n  };\r\n\r\n  const getOrderRows = (_order: Order) => {\r\n    const result = [];\r\n    for (let [product, quantity] of cart.items.entries()) {\r\n      const orderRow: OrderRow = {\r\n        productId: product.id,\r\n        orderId: _order?.id,\r\n        amount: quantity\r\n      };\r\n      result.push(orderRow);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row xs={1} md={2}>\r\n        <Col className=\"cart px-1 px-md-3 mt-4\">\r\n          <ul className=\"list-group\">\r\n            <CartItems />\r\n            <li className=\"cart-item cart-footer list-group-item d-flex justify-content-between align-items-center flex-wrap p-0\">\r\n              <div className=\"d-flex h5 ml-auto m-3\">\r\n                <div className=\"font-weight-light mr-3\">Total:</div>\r\n                <div className=\"font-weight-bold\">\r\n                  {getCurrencyFormat(cart.subTotal)}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <ModalDialogue\r\n            onConfirm={() => dispatch(CartAction.DELETE)}\r\n            onCancel={() => dispatch(CartAction.HIDE_MODAL)}\r\n            props={cart.modal}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <CheckoutForm\r\n            errors={errors}\r\n            setErrors={setErrors}\r\n            isValidEmail={isValidEmail}\r\n            isSaving={isSaving}\r\n            onSubmit={handleSubmit}\r\n          />\r\n          {!!errors && !!errors.response && (\r\n            <div className=\"alert alert-danger mt-4 mb-0\">\r\n              {errors.response}\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useContext } from \"react\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\n// components\r\nimport CartItem from \"./CartItem\";\r\n\r\ninterface OrderRowsProps {\r\n  items?: CartItem[];\r\n  editable: boolean;\r\n  onChange: HandleChange;\r\n  updateParams: UpdateParams;\r\n}\r\n\r\nconst OrderRows: React.FC<OrderRowsProps> = ({\r\n  items,\r\n  editable,\r\n  onChange,\r\n  updateParams\r\n}) => {\r\n  const { products } = useContext(ProductContext);\r\n\r\n  const toCartItems = (orderRows: OrderRow[] | undefined) => {\r\n    if (!orderRows) return [];\r\n    return orderRows.map(orderRow => {\r\n      const product: Product | undefined = products.find(\r\n        product => product.id === orderRow.productId\r\n      );\r\n      return { product, quantity: orderRow.amount } as CartItem;\r\n    });\r\n  };\r\n\r\n  if (!items && updateParams?.order)\r\n    items = toCartItems(updateParams.order?.orderRows);\r\n  return (\r\n    <>\r\n      {items?.map(item => {\r\n        return (\r\n          !!item.product && (\r\n            <CartItem\r\n              key={item.product.id}\r\n              item={item}\r\n              editable={editable}\r\n              onChange={onChange}\r\n              updateParams={{ ...updateParams, items }}\r\n            />\r\n          )\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderRows;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { getCurrencyFormat, getOrderIdFormat } from \"../../lib/utils\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\n\r\n// components\r\nimport { CartAction } from \"../hooks/useCart\";\r\nimport OrderRows from \"../common/OrderRows\";\r\n\r\nconst Confirmation: React.FC = () => {\r\n  const { companies, cart, dispatch, order } = useContext(OrderContext);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const validateOrder = () => {\r\n      let message = \"\";\r\n      if (order.orderRows) {\r\n        if (order.orderRows?.length !== cart.items.size)\r\n          message = \"Order contains wrong number of items.\";\r\n        let counter = 0;\r\n        for (let [product, quantity] of cart.items.entries()) {\r\n          const orderRow = order.orderRows[counter];\r\n          if (\r\n            !(product.id === orderRow.productId && quantity === orderRow.amount)\r\n          )\r\n            message = `Order contains wrong quantity of \"${product.name}\": ${orderRow.amount} should be ${quantity}!`;\r\n          counter++;\r\n        }\r\n      } else message = \"Order is empty!\";\r\n\r\n      if (!message) {\r\n        dispatch(CartAction.RESET);\r\n        return \"\";\r\n      } else setError(message);\r\n    };\r\n    if (cart.items.size) validateOrder();\r\n  }, [cart.items, dispatch, order.orderRows]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h1 className=\"m-4 text-secondary\">Order confirmation</h1>\r\n      </Row>\r\n      <Row>\r\n        <Col xs={12} lg={6} className=\"px-1 px-md-3 mb-4\">\r\n          <div className=\"cart\">\r\n            <ul className=\"list-group\">\r\n              <OrderRows\r\n                editable={false}\r\n                onChange={() => {}}\r\n                updateParams={{ order }}\r\n              />\r\n              <li className=\"cart-item cart-footer h5 list-group-item d-flex justify-content-end\">\r\n                <div className=\"font-weight-bold d-flex m-0\">\r\n                  <div className=\"font-weight-light mr-3\">Total:</div>\r\n                  <div>{getCurrencyFormat(order.totalPrice)}</div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {!!error && (\r\n            <div className=\"alert alert-danger mt-4 mb-0\">{error}</div>\r\n          )}\r\n        </Col>\r\n        <Col className=\"px-1 px-md-3\">\r\n          <div className=\"cart\">\r\n            <ul className=\"list-group open m-0\">\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-light\">order #</div>\r\n                <div>{getOrderIdFormat(order.id)}</div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-light\">customer</div>\r\n                <div>\r\n                  {companies.map(company => {\r\n                    return company.id === order.companyId\r\n                      ? company.name\r\n                      : undefined;\r\n                  })}\r\n                </div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-light\">order created</div>\r\n                <div className=\"text-nowrap\">\r\n                  {new Date(order.created).toLocaleString(\"en-gb\")}\r\n                </div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-light\">e-mail</div>\r\n                <div>{order.createdBy}</div>\r\n              </li>\r\n              <li className=\"cart-item list-group-item d-flex align-items-center justify-content-between\">\r\n                <div className=\"font-weight-light\">payment method</div>\r\n                <div>{order.paymentMethod}</div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center vh-100\">\r\n      <div className=\"container text-center text-primary\">\r\n        <FontAwesomeIcon icon=\"spinner\" size=\"10x\" pulse />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState, Dispatch, useContext } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport slugify from \"slugify\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n// context\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\n\r\n// components\r\nimport ProductCard from \"./ProductCard\";\r\nimport Cart from \"./Cart\";\r\nimport NotFound from \"../common/NotFound\";\r\nimport Loading from \"../common/Loading\";\r\n\r\nconst NO_MOVIES: Product[] = [\r\n  {\r\n    id: -1,\r\n    name: \"No products\",\r\n    description: \"\",\r\n    price: 0,\r\n    imageUrl: \"\",\r\n    year: 0,\r\n    added: new Date(),\r\n    productCategory: []\r\n  }\r\n];\r\n\r\ninterface SearchHitsProps {\r\n  setClearSearch: Dispatch<React.SetStateAction<boolean>>;\r\n  video: Video;\r\n}\r\n\r\nconst SearchHits: React.FC<SearchHitsProps> = ({ setClearSearch, video }) => {\r\n  const { products } = useContext(ProductContext);\r\n  const { slug } = useParams();\r\n  const [foundProducts, setFoundProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(!foundProducts.length);\r\n  }, [loading, foundProducts]);\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      const setProducts = () => {\r\n        console.time(\"hits\");\r\n        const slugslug = slugify(slug, { lower: true });\r\n        const result: Product[] = Array.from(\r\n          new Set(\r\n            products.filter(\r\n              product =>\r\n                slugify(product.name, { lower: true }).indexOf(slugslug) >= 0\r\n            )\r\n          )\r\n        );\r\n        console.timeEnd(\"hits\");\r\n\r\n        setFoundProducts(result?.length ? result : NO_MOVIES);\r\n      };\r\n\r\n      setProducts();\r\n    }\r\n  }, [slug, products]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setClearSearch(true);\r\n    };\r\n  }, [setClearSearch]);\r\n\r\n  return (\r\n    <>\r\n      {!slug && <Redirect to=\"/\" />}\r\n      {((!foundProducts || !foundProducts.length) && <Loading />) ||\r\n        (foundProducts === NO_MOVIES && (\r\n          <NotFound video={video} hasButton={false} caption=\"Nope\" />\r\n        )) || (\r\n          <Row xs={1} sm={2} md={3} lg={4} xl={5}>\r\n            {foundProducts.map(product => (\r\n              <ProductCard key={product.id} product={product} />\r\n            ))}\r\n          </Row>\r\n        )}\r\n      <Cart />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchHits;\r\n","import React from \"react\";\r\nimport { APP_INFO } from \"../../lib/utils\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div>\r\n        <div>&copy; 2020 Christofer Laurin</div>\r\n        <div>\r\n          {`${APP_INFO.name} ${APP_INFO.version} ${process.env.NODE_ENV}`}\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { createContext } from \"react\";\r\n\r\nexport const orderStatusArray = [\r\n  \"Confirmed\",\r\n  \"Completed\",\r\n  \"Pending\",\r\n  \"Shipped\",\r\n  \"Received\",\r\n  \"Denied\",\r\n  \"Cancelled\",\r\n  \"Refunded\"\r\n];\r\n\r\nexport const orderStatusColors = [\r\n  \"#395f97\",\r\n  \"#327694\",\r\n  \"#2d7b64\",\r\n  \"#5d8039\",\r\n  \"#ac833a\",\r\n  \"#97527a\",\r\n  \"#95373c\",\r\n  \"#6e5c9d\"\r\n];\r\n\r\ninterface IAdminContext {\r\n  orderStatusArray: string[];\r\n  orderStatusColors: string[];\r\n  statusFilter: number;\r\n  setStatusFilter: React.Dispatch<React.SetStateAction<number>>;\r\n  statusMatches: number[];\r\n  setStatusMatches: React.Dispatch<React.SetStateAction<number[]>>;\r\n  changeOrderStatus: (status: number, order: Order) => void;\r\n  updateItem: UpdateItem;\r\n  saveOrder: (order: Order) => Promise<Order>;\r\n  deleteOrder: (order: Order) => Promise<Order>;\r\n}\r\n\r\nexport const AdminContext = createContext<IAdminContext>({\r\n  orderStatusArray,\r\n  orderStatusColors,\r\n  statusFilter: 0,\r\n  setStatusFilter: () => {},\r\n  statusMatches: [],\r\n  setStatusMatches: () => {},\r\n  changeOrderStatus: () => {},\r\n  updateItem: () => {},\r\n  saveOrder: async () => new Promise(() => {}),\r\n  deleteOrder: async () => new Promise(() => {})\r\n});\r\n","import React, { ChangeEvent, useContext } from \"react\";\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\ninterface SelectOrderStatusProps {\r\n  order: Order;\r\n  selected?: number;\r\n  onChange: HandleChange;\r\n}\r\n\r\nconst SelectOrderStatus: React.FC<SelectOrderStatusProps> = ({\r\n  order,\r\n  selected = 0,\r\n  onChange\r\n}) => {\r\n  const { orderStatusArray, orderStatusColors } = useContext(AdminContext);\r\n\r\n  const statusColor =\r\n    selected !== undefined\r\n      ? orderStatusColors[selected]\r\n      : order?.status !== undefined\r\n      ? orderStatusColors[order.status]\r\n      : \"inherit\";\r\n\r\n  return (\r\n    <select\r\n      name=\"orderStatus\"\r\n      className=\"w-100 badge-select text-white\"\r\n      style={{ color: statusColor, backgroundColor: \"transparent\" }}\r\n      defaultValue={selected}\r\n      onChange={(e: ChangeEvent<HTMLSelectElement>) => onChange(e, order)}\r\n    >\r\n      {orderStatusArray.map((status, index) => (\r\n        <option\r\n          value={index}\r\n          key={status}\r\n          style={{ color: orderStatusColors[index] }}\r\n        >\r\n          {status}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectOrderStatus;\r\n","import React from \"react\";\r\n\r\n// icons\r\nimport {\r\n  FontAwesomeIcon,\r\n  FontAwesomeIconProps\r\n} from \"@fortawesome/react-fontawesome\";\r\nimport { IconName } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst PAY_METHODS = [\r\n  { icon: \"cc-visa\" as IconName, name: \"Visa\" },\r\n  { icon: \"cc-mastercard\" as IconName, name: \"MasterCard\" },\r\n  { icon: \"cc-amex\" as IconName, name: \"Amex\" }\r\n];\r\n\r\ninterface PaymentIconProps {\r\n  name: string;\r\n  size: FontAwesomeIconProps[\"size\"];\r\n}\r\nconst PaymentIcon: React.FC<PaymentIconProps> = ({ name, size }) => {\r\n  const icon = PAY_METHODS.find(\r\n    i => i.name.toLowerCase() === name.toLowerCase()\r\n  );\r\n  if (icon) return <FontAwesomeIcon icon={[\"fab\", icon.icon]} size={size} />;\r\n  return <></>;\r\n};\r\n\r\nexport default PaymentIcon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { getCurrencyFormat, getOrderIdFormat } from \"../../lib/utils\";\r\n\r\n// css\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\n\r\n// icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// context\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\n// hooks\r\nimport { SaveState, useSaveState } from \"./hooks/useSaveState\";\r\n\r\n// components\r\nimport OrderRows from \"../common/OrderRows\";\r\nimport SelectOrderStatus from \"./SelectOrderStatus\";\r\nimport PaymentIcon from \"./PaymentIcon\";\r\n\r\ninterface OrderProps {\r\n  order: Order;\r\n}\r\n\r\nconst Order: React.FC<OrderProps> = ({ order }) => {\r\n  const {\r\n    orderStatusColors,\r\n    statusFilter,\r\n    changeOrderStatus,\r\n    updateItem,\r\n    saveOrder,\r\n    deleteOrder\r\n  } = useContext(AdminContext);\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState<number | undefined>(\r\n    order.status\r\n  );\r\n\r\n  const [\r\n    { isDirty, isSaving, isSaved, isDeleting, isDeleted },\r\n    setSaveState\r\n  ] = useSaveState();\r\n\r\n  const isVisible = () => {\r\n    return statusFilter === -1 || order.status === statusFilter;\r\n  };\r\n\r\n  const onChangeStatus: HandleChange = e => {\r\n    setSaveState(SaveState.DIRTY);\r\n    setSelectedStatus(parseInt(e.target.value));\r\n    if (!open) toggleOpen();\r\n  };\r\n\r\n  const onChangeItem: HandleChange = (e, params) => {\r\n    setSaveState(SaveState.DIRTY);\r\n    updateItem(params);\r\n  };\r\n\r\n  const onSubmit: HandleClick = async (order: Order) => {\r\n    setSaveState(SaveState.SAVING);\r\n    if (selectedStatus && selectedStatus !== order.status) {\r\n      changeOrderStatus(selectedStatus, order);\r\n      toggleOpen();\r\n    }\r\n    const response = await saveOrder(order);\r\n    if (response && response.status && [200, 204].includes(response.status)) {\r\n      setSaveState(SaveState.SAVED);\r\n    }\r\n  };\r\n\r\n  const onDelete: HandleClick = async (order: Order) => {\r\n    setSaveState(SaveState.DELETING);\r\n    deleteOrder(order);\r\n  };\r\n\r\n  const onClick: HandleClick = e => {\r\n    if (!e.target.className.includes(\"badge-select\")) toggleOpen();\r\n  };\r\n\r\n  const toggleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const saveButtonClass = () => {\r\n    return isSaved\r\n      ? \"btn-success\"\r\n      : isDirty\r\n      ? \"btn-primary\"\r\n      : \"btn-outline-secondary\";\r\n  };\r\n\r\n  const statusColor =\r\n    selectedStatus !== undefined\r\n      ? orderStatusColors[selectedStatus]\r\n      : order?.status !== undefined\r\n      ? orderStatusColors[order.status]\r\n      : \"inherit\";\r\n\r\n  const Header: React.FC = () => {\r\n    return (\r\n      <>\r\n        <div className=\"w-20\">{getOrderIdFormat(order.id)}</div>\r\n        <div\r\n          className=\"w-30 badge badge-pill\"\r\n          style={{ backgroundColor: statusColor }}\r\n        >\r\n          <SelectOrderStatus\r\n            order={order}\r\n            onChange={onChangeStatus}\r\n            selected={selectedStatus}\r\n          />\r\n        </div>\r\n        <div className=\"w-40 d-flex flex-wrap align-items-center\">\r\n          <div className=\"ml-4\">\r\n            {new Date(order.created).toLocaleDateString(\"en-gb\")}\r\n          </div>\r\n          <div className=\"ml-auto\">{getCurrencyFormat(order.totalPrice)}</div>\r\n        </div>\r\n        <div className=\"ml-auto\">\r\n          <FontAwesomeIcon icon=\"angle-up\" />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const Footer: React.FC = () => {\r\n    return (\r\n      <li className=\"cart-item cart-footer list-group-item d-flex justify-content-between align-items-center flex-wrap p-2 pl-3 m-0\">\r\n        <div>\r\n          <PaymentIcon name={order.paymentMethod} size=\"sm\" />\r\n        </div>\r\n        <div className=\"flex-grow-1 overflow-hidden mx-2\">\r\n          <small>{order.createdBy}</small>\r\n        </div>\r\n        <div className=\"w-25\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"w-100 btn btn-danger\"\r\n            onClick={() => onDelete(order)}\r\n          >\r\n            {(isDeleting && <FontAwesomeIcon icon=\"spinner\" pulse />) ||\r\n              (isDeleted && <FontAwesomeIcon icon=\"check\" />) ||\r\n              \"Delete\"}\r\n          </button>\r\n        </div>\r\n        {order.totalPrice ? (\r\n          <div className=\"w-25 ml-2\">\r\n            <button\r\n              type=\"button\"\r\n              className={`w-100 btn ${saveButtonClass()}`}\r\n              disabled={!isDirty}\r\n              onClick={() => onSubmit(order)}\r\n            >\r\n              {(isSaving && <FontAwesomeIcon icon=\"spinner\" pulse />) ||\r\n                (isSaved && <FontAwesomeIcon icon=\"check\" />) ||\r\n                \"Save\"}\r\n            </button>\r\n          </div>\r\n        ) : undefined}\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isVisible() && (\r\n        <li className=\"list-group-item p-0 mb-3\">\r\n          <ul className=\"list-group\">\r\n            <li\r\n              className={`toggle list-group-item d-flex align-items-center justify-content-between py-2\r\n              ${open ? \"open\" : \"\"}`}\r\n              onClick={onClick}\r\n              aria-controls={order.id?.toString()}\r\n              aria-expanded={open}\r\n            >\r\n              <Header />\r\n            </li>\r\n            <Collapse in={open}>\r\n              <div id={order.id?.toString()}>\r\n                <OrderRows\r\n                  editable={true}\r\n                  onChange={onChangeItem}\r\n                  updateParams={{ order }}\r\n                />\r\n                <Footer />\r\n              </div>\r\n            </Collapse>\r\n          </ul>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useContext } from \"react\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\n// context\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\ninterface ToggleStatusFilter {\r\n  statusFilter: number;\r\n  statusMatches: number[];\r\n  changeStatusFilter: Function;\r\n}\r\n\r\nconst ToggleStatusFilter: React.FC<ToggleStatusFilter> = ({\r\n  statusFilter,\r\n  statusMatches,\r\n  changeStatusFilter\r\n}) => {\r\n  const { orderStatusArray, orderStatusColors } = useContext(AdminContext);\r\n\r\n  const onChange = (selectedStatus: number) => {\r\n    changeStatusFilter(selectedStatus);\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-3 w-100\">\r\n      <ToggleButtonGroup\r\n        className=\"select-order d-flex flex-wrap w-100\"\r\n        type=\"radio\"\r\n        name=\"options\"\r\n        value={statusFilter}\r\n        onChange={onChange}\r\n      >\r\n        <ToggleButton\r\n          value={-1}\r\n          variant={statusFilter === -1 ? \"secondary\" : \"info\"}\r\n          size=\"sm\"\r\n        >\r\n          All\r\n          <span className=\"badge badge-pill bg-dark text-light ml-2\">\r\n            {statusMatches.reduce((a, b) => a + b, 0)}\r\n          </span>\r\n        </ToggleButton>\r\n        {orderStatusArray.map((status, index) =>\r\n          statusMatches[index] ? (\r\n            <ToggleButton\r\n              key={status}\r\n              value={index}\r\n              variant={statusFilter === index ? \"secondary\" : \"info\"}\r\n              size=\"sm\"\r\n            >\r\n              {status}\r\n              <span\r\n                className=\"badge badge-pill text-light ml-2\"\r\n                style={{ backgroundColor: orderStatusColors[index] }}\r\n              >\r\n                {statusMatches[index]}\r\n              </span>\r\n            </ToggleButton>\r\n          ) : undefined\r\n        )}\r\n      </ToggleButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleStatusFilter;\r\n","import React, { useEffect, useContext } from \"react\";\r\n\r\n// context\r\nimport { AdminContext } from \"../contexts/AdminContext\";\r\n\r\n// components\r\nimport Order from \"./Order\";\r\nimport ToggleStatusFilter from \"./ToggleStatusFilter\";\r\n\r\ninterface OrderListProps {\r\n  orders: Order[];\r\n}\r\n\r\nconst OrderList: React.FC<OrderListProps> = ({ orders }) => {\r\n  const { orderStatusArray } = useContext(AdminContext);\r\n  const {\r\n    statusFilter,\r\n    setStatusFilter,\r\n    statusMatches,\r\n    setStatusMatches\r\n  } = useContext(AdminContext);\r\n\r\n  const changeStatusFilter = (selectedStatus: number) => {\r\n    if (selectedStatus < orderStatusArray.length) {\r\n      setStatusFilter(selectedStatus);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let matches: number[] = [];\r\n    for (let i = 0; i < orderStatusArray.length; i++) {\r\n      let counter = 0;\r\n      orders.forEach(order => {\r\n        if (order.status === i) counter++;\r\n      });\r\n      matches.push(counter);\r\n    }\r\n    setStatusMatches(matches);\r\n  }, [orders, orderStatusArray, setStatusMatches]);\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      {orders.length ? (\r\n        <ToggleStatusFilter\r\n          statusFilter={statusFilter}\r\n          statusMatches={statusMatches}\r\n          changeStatusFilter={changeStatusFilter}\r\n        />\r\n      ) : undefined}\r\n      <ul className=\"list-group m-0\">\r\n        {orders.map(order => (\r\n          <Order key={order.id} order={order} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useState, useEffect, ChangeEvent, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\n// css\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n// api\r\nimport * as API from \"../../lib/api\";\r\n\r\n// context\r\nimport { OrderContext } from \"../contexts/OrderContext\";\r\nimport {\r\n  orderStatusArray,\r\n  orderStatusColors,\r\n  AdminContext\r\n} from \"../contexts/AdminContext\";\r\n\r\n// components\r\nimport SelectCompany from \"../common/SelectCompany\";\r\nimport OrderList from \"./OrderList\";\r\nimport Loading from \"../common/Loading\";\r\n\r\nconst OrderAdmin: React.FC = () => {\r\n  const { companies } = useContext(OrderContext);\r\n  const [companyOrders, setCompanyOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [statusFilter, setStatusFilter] = useState<number>(-1);\r\n  const [statusMatches, setStatusMatches] = useState<number[]>([]);\r\n\r\n  const { slug } = useParams();\r\n  const history = useHistory();\r\n\r\n  const currentCompany: Company | undefined = companies.find(\r\n    company => company.slug === slug?.toLowerCase()\r\n  );\r\n\r\n  const currentCompanyId = currentCompany ? currentCompany.id : 0;\r\n\r\n  useEffect(() => {\r\n    if (!statusMatches[statusFilter]) setStatusFilter(-1);\r\n  }, [statusFilter, statusMatches]);\r\n\r\n  useEffect(() => {\r\n    const setOrdersAsync = async () => {\r\n      const orders: Order[] = await API.get<Order>(\r\n        `orders?companyId=${currentCompanyId}`\r\n      );\r\n      orders.sort((x, y) => (x.created < y.created ? 1 : -1));\r\n      setCompanyOrders(orders);\r\n      setLoading(false);\r\n    };\r\n    if (currentCompanyId) setOrdersAsync();\r\n    else setLoading(false);\r\n  }, [currentCompanyId]);\r\n\r\n  const changeCompany = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedCompanyId = parseInt(e.target.value);\r\n    const selectedCompany = companies.find(\r\n      company => company.id === selectedCompanyId\r\n    );\r\n    const _slug = selectedCompany ? selectedCompany.slug : \"\";\r\n    history.push(`/admin/${_slug}`);\r\n  };\r\n\r\n  const changeOrderStatus = (status: number, order: Order) => {\r\n    order.status = status;\r\n\r\n    const filteredOrders = companyOrders.filter(o => o !== order);\r\n    const updatedOrders = filteredOrders\r\n      .concat([order])\r\n      .sort((x, y) => (x.created < y.created ? 1 : -1));\r\n    setCompanyOrders(updatedOrders);\r\n  };\r\n\r\n  const updateItem: UpdateItem = ({ items, item, order, quantity }) => {\r\n    if (!items || !item || !order) return;\r\n    if (quantity) {\r\n      item.quantity = quantity;\r\n    } else {\r\n      items = items.filter(i => i !== item);\r\n    }\r\n    order.totalPrice = getTotalPrice(items);\r\n    order.orderRows = toOrderRows(items, order.id);\r\n\r\n    updateOrder(order);\r\n  };\r\n\r\n  const saveOrder: (order: Order) => Promise<Order> = async (order: Order) => {\r\n    const response = await API.save<Order>(order, \"orders\", order.id);\r\n    console.log(\"save order:\", JSON.stringify(order));\r\n    console.log(\"response:\", response);\r\n    return response;\r\n  };\r\n\r\n  const updateOrder = (order: Order) => {\r\n    const filteredOrders = companyOrders.filter(o => o !== order);\r\n    const updatedOrders = filteredOrders\r\n      .concat([order])\r\n      .sort((x, y) => (x.created < y.created ? 1 : -1));\r\n\r\n    setCompanyOrders(updatedOrders);\r\n  };\r\n\r\n  const deleteOrder: (order: Order) => Promise<Order> = async (\r\n    order: Order\r\n  ) => {\r\n    if (order.id) {\r\n      const response = await API.del(\"orders\", order.id);\r\n      console.log(\"delete order:\", JSON.stringify(order));\r\n      console.log(\"response:\", response);\r\n      if (response && response.status && response.status === 200) {\r\n        const filteredOrders = companyOrders\r\n          .filter(o => o !== order)\r\n          .sort((x, y) => (x.created < y.created ? 1 : -1));\r\n        setCompanyOrders(filteredOrders);\r\n      }\r\n      return response;\r\n    }\r\n  };\r\n\r\n  const getTotalPrice = (items: CartItem[]) => {\r\n    let result = 0;\r\n    items.map(item => (result += item.product.price * item.quantity));\r\n    return result;\r\n  };\r\n\r\n  const toOrderRows = (items: CartItem[], orderId: number | undefined) => {\r\n    return items.map(item => ({\r\n      productId: item.product.id,\r\n      orderId,\r\n      amount: item.quantity\r\n    })) as OrderRow[];\r\n  };\r\n\r\n  return (\r\n    <AdminContext.Provider\r\n      value={{\r\n        orderStatusArray,\r\n        orderStatusColors,\r\n        statusFilter,\r\n        setStatusFilter,\r\n        statusMatches,\r\n        setStatusMatches,\r\n        changeOrderStatus,\r\n        updateItem,\r\n        saveOrder,\r\n        deleteOrder\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col>\r\n          <h1 className=\"pt-4 text-secondary\">Order admin</h1>\r\n        </Col>\r\n        <Col xs={12} sm={6} className=\"my-2\">\r\n          <SelectCompany selected={currentCompanyId} onChange={changeCompany} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {loading ? <Loading /> : <OrderList orders={companyOrders} />}\r\n        </Col>\r\n      </Row>\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderAdmin;\r\n","import React, { useState } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// css\r\nimport \"../scss/App.scss\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\n// icons\r\nimport \"../lib/FontAwesome\";\r\n\r\n// context\r\nimport {\r\n  ProductContext,\r\n  NEWS_CATEGORY,\r\n  NUMBER_OF_ITEMS_IN_NEWS\r\n} from \"./contexts/ProductContext\";\r\n\r\nimport { OrderContext, companies, emptyOrder } from \"./contexts/OrderContext\";\r\n\r\n// hooks\r\nimport { useProducts } from \"./hooks/useProducts\";\r\nimport { useCart } from \"./hooks/useCart\";\r\nimport { useVideo } from \"./hooks/useVideo\";\r\n\r\n// components\r\nimport Navigation from \"./common/Navigation\";\r\nimport ProductsPage from \"./shop/ProductsPage\";\r\nimport NotFound from \"./common/NotFound\";\r\nimport Checkout from \"./shop/Checkout\";\r\nimport Confirmation from \"./shop/Confirmation\";\r\nimport Loading from \"./common/Loading\";\r\nimport SearchHits from \"./shop/SearchHits\";\r\nimport Footer from \"./common/Footer\";\r\nimport OrderAdmin from \"./admin/OrderAdmin\";\r\n\r\nconst App = () => {\r\n  const { categories, products, loading } = useProducts();\r\n  const [cart, dispatch] = useCart(products);\r\n  const [order, setOrder] = useState<Order>(emptyOrder);\r\n\r\n  const [clearSearch, setClearSearch] = useState<boolean>(false);\r\n\r\n  const video = useVideo();\r\n\r\n  return loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <div id=\"content\">\r\n      <ProductContext.Provider\r\n        value={{\r\n          categories,\r\n          products,\r\n          news: { NEWS_CATEGORY, NUMBER_OF_ITEMS_IN_NEWS }\r\n        }}\r\n      >\r\n        <OrderContext.Provider\r\n          value={{ companies, cart, dispatch, order, setOrder }}\r\n        >\r\n          <Navigation\r\n            clearSearch={clearSearch}\r\n            setClearSearch={setClearSearch}\r\n          />\r\n          <Container fluid as=\"main\">\r\n            <Switch>\r\n              <Route path=\"/checkout\">\r\n                <Checkout />\r\n              </Route>\r\n              <Route path=\"/confirmation\">\r\n                <Confirmation />\r\n              </Route>\r\n              <Route path=\"/not-found\">\r\n                <NotFound video={video} hasButton={true} caption=\"404\" />\r\n              </Route>\r\n              <Route path=\"/admin\" exact>\r\n                <OrderAdmin />\r\n              </Route>\r\n              <Route path=\"/admin/:slug\">\r\n                <OrderAdmin />\r\n              </Route>\r\n              <Route path=\"/search/:slug\">\r\n                <SearchHits setClearSearch={setClearSearch} video={video} />\r\n              </Route>\r\n              <Route path=\"/:slug\">\r\n                <ProductsPage />\r\n              </Route>\r\n              <Redirect from=\"/\" exact to=\"/newly-added\" />\r\n              <Route>\r\n                <Redirect to=\"/not-found\" />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          <Footer />\r\n        </OrderContext.Provider>\r\n      </ProductContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\nimport slugify from \"slugify\";\r\n\r\n// API\r\nimport * as API from \"../../lib/api\";\r\n\r\n// context\r\nimport {\r\n  NEWS_CATEGORY,\r\n  NUMBER_OF_ITEMS_IN_NEWS\r\n} from \"../contexts/ProductContext\";\r\n\r\nexport const useProducts: () => {\r\n  categories: ProductCategory[];\r\n  products: Product[];\r\n  loading: boolean;\r\n} = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [categories, setCategories] = useState<ProductCategory[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(!(categories.length && products.length));\r\n  }, [loading, categories, products]);\r\n\r\n  useEffect(() => {\r\n    const setCategoriesAsync = async () => {\r\n      const c: ProductCategory[] = await API.get<ProductCategory>(\r\n        \"categories\",\r\n        true\r\n      );\r\n      c.unshift(NEWS_CATEGORY);\r\n      c.map(\r\n        category => (category.slug = slugify(category.name, { lower: true }))\r\n      );\r\n      setCategories(c);\r\n    };\r\n    setCategoriesAsync();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setProductsAsync = async () => {\r\n      const _products: Product[] = await API.get<Product>(\"products\", true);\r\n      populateNewsCategory(_products);\r\n      _products.sort((x, y) => (x.name > y.name ? 1 : -1));\r\n      setProducts(_products);\r\n    };\r\n    setProductsAsync();\r\n  }, []);\r\n\r\n  const populateNewsCategory = (_products: Product[]) => {\r\n    _products.sort((x, y) => (x.added < y.added ? 1 : -1));\r\n    _products\r\n      .slice(0, NUMBER_OF_ITEMS_IN_NEWS)\r\n      .map(product =>\r\n        product.productCategory.push({ categoryId: NEWS_CATEGORY.id })\r\n      );\r\n  };\r\n\r\n  return { categories, products, loading };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { APP_INFO } from \"../../lib/utils\";\r\n// api\r\nimport * as API from \"../../lib/api\";\r\n\r\nexport const useVideo: () => { url: string; poster: string } = () => {\r\n  const [video, setVideo] = useState<Video>({ url: \"\", poster: \"\" });\r\n\r\n  useEffect(() => {\r\n    const preloadVideo = async () => {\r\n      const blob = await API.fetchBLOB(`${APP_INFO.root}/media/404.mkv`);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const poster = `${APP_INFO.root}/media/404.jpg`;\r\n      setVideo({ url, poster });\r\n    };\r\n    preloadVideo();\r\n  }, []);\r\n\r\n  return video;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// components\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}